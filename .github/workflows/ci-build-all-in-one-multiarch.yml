name: Build multi-arch all-in-one

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
        - name: amd64
          task: GOOS=linux GOARCH=amd64 $(MAKE) build-all-in-one
        - name: arm64
          task: GOOS=linux GOARCH=arm64 $(MAKE) build-all-in-one
        - name: s390x
          task: GOOS=linux GOARCH=s390x $(MAKE) build-all-in-one
        - name: powerpc
          task: GOOS=linux GOARCH=ppc64le $(MAKE) build-all-in-one
    name: build all-in-one for ${{ matrix.platform.name }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Export BRANCH variable
      uses: ./.github/actions/setup-branch

    - name: Install tools
      run: make install-ci

    - name: Build All-in-one
      run: make ${{ matrix.platform.task }}
    
    - uses: actions/upload-artifact@v2
      with: 
        name: all-in-one-linux
        path: ./cmd/all-in-one/all-in-one-linux-*
        

  build-docker-image:
    needs: build-binaries
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5005:5005
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: docker/setup-qemu-action@v1

    - uses: docker/setup-buildx-action@v1
      with:
        driver-opts: network=host
    
    - uses: actions/download-artifact@v2
      with:
        name: all-in-one-linux
        path: ./cmd/all-in-one/

    - uses: docker/login-action@v1 
      with:
        username: kunlu20
        password: 4f850c08-489a-4b71-9deb-eb75138258ad
    
    - name: "build the image"
      run: bash scripts/build-all-in-one-image-multiarch.sh
